#
# Mineserver configuration
#

# Include item alias config file
include "item_alias.cfg";

# Interface.
system.interface.use_cli = true;

# Server name
system.server_name = "Mineserver testserver";

# Validate usernames against minecraft.net?
system.user_validation = false;

# Disclose Software Version
system.show_version = true; 

# Userlimit
system.user_limit = 50;

# IP
net.ip = "0.0.0.0";

# Port
net.port = 25565;

# Write the PID of the server to this file
system.pid_file = "mineserver.pid";

# Server administrator authentication password
# Used for core commands like shutdown and loadplugin
# IMPORTANT: Change this!!
system.admin.password = "password";

# 0 = Normal Map
# 1 = Nether Map
# ...
# Map directory : Generator
map.storage.nbt.directories= ();
# WORLD ARE LOADED ALPHABETICALLY. you have been warned ;P

#map.storage.nbt.directories += ("Bnether":1);
map.storage.nbt.directories += ("world":0);
#map.storage.nbt.directories += ("Cheaven":2);

# Localisation strings
strings.wrong_protocol = "Wrong protocol version";
strings.server_full = "Server is currently full";

# Physics options
system.physics.enabled = false;

# Enable PvP ?
system.pvp.enabled = false;

# Save generated chunks which are not changed?
#  Will generate the chunks again if false.
map.save_unchanged_chunks = true;

# Map save interval in seconds, 0 = off
map.save_interval = 1800;

#
# Map generator parameters
#

# Generate spawn area in advance
map.generate_spawn.enabled = true;
map.generate_spawn.size = 5;
map.generate_spawn.show_progress = true;

# Generate flatgrass map instead of normal map
mapgen.flatgrass = false;

# Snow instead of grass
mapgen.winter.enabled = true;

# Sea level
mapgen.sea.level = 62;

# Add Ore
mapgen.addore = true;

# Generate trees
mapgen.trees.enabled = true;

# Generate caves
mapgen.caves.enabled = true;

# Smaller number = smaller caves
mapgen.caves.size = 15;

# Do not modify if not sure what this is
# Used in: if(caveNoise.GetValue(x,y,z) < caveTreshold)
mapgen.caves.treshold = 0.05;

mapgen.caves.lava = true;

# Expand beaches (Experimental)
mapgen.beaches.expand = false;
mapgen.beaches.extent = 10;
mapgen.beaches.height = 2;

# Plugin loading
#
# The syntax is as follows:
# > system.plugins += ("<name>":"[location]");
# Alternatively you can do this:
# > system.plugins.name = "[location]"
# If you use the second syntax, you're limited to [a-zA-Z0-9_]+ for the name.
# It's probably not a great idea to use any characters other than that anyway.
#
# <plugin name>
# The plugin name is whatever you like, it will be passed to the plugin so it
# can use it as a sort of instance name. For example if you have two different
# ban lists (for some reason), you could have them both operating at once by
# giving them unique identifiers.
#
# [location]
# The location is optional. If it's a zero-length string, mineserver tries to
# load it from within the main binary. Instructions on how to compile plugins
# into mineserver are pending, but it basically involves just compiling the
# plugin to an object file then linking it to the mineserver binary when it's
# built. If you omit the .dll/.so part of the filename, mineserver will try to
# add it automatically.
#
# More information on this topic will be covered on the wiki Soon (tm).

system.plugins = ();
#system.plugins += ("test_1":"./test_1");
#system.plugins += ("test_2":"./test_2");
#system.plugins += ("test_3":"./test_3");
#system.plugins += ("test_4a":"./test_4");
#system.plugins += ("test_4b":"./test_4");
#system.plugins += ("test_4c":"./test_4");
system.plugins += ("command":"./command");
#system.plugins += ("nether":"./nether");
system.plugins += ("filelog":"./filelog");
system.plugins += ("cursesui":"./cursesui");
#system.plugins += ("banlist":"./banlist");
#system.plugins += ("whitelist":"./whitelist");
